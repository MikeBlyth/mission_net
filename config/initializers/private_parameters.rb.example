## This file is where all the private info should be kept, i.e. what should
#  not go into the public respository. Passwords, API tokens, etc.

# Be sure to restart your server when you modify this file.

# Your secret key for verifying the integrity of signed cookies.
# If you change this key, all old signed cookies will become invalid!
# Make sure the secret is at least 30 characters and all random,
# no regular words or you'll be exposed to dictionary attacks.
Joslink::Application.config.secret_token = '**********************************************************'

# Heroku API Key
silence_warnings {ENV['HEROKU_API_KEY'] = '*************************'}

# IronWorker (background processing service) credentials
  ENV['IRON_WORKER_TOKEN'] = '*************************'
  ENV['IRON_WORKER_PROJECT_ID'] = '*************************'
  
# Action Mailer SMTP Settings
ActionMailer::Base.smtp_settings = {
  :address        => '*************************',
  :port           => '*************************',
  :authentication => :plain,
  :user_name      => '*************************',
  :password       => '*************************',
  :domain         => '*************************',
  :openssl_verify_mode => 'none'
}  

OmniAuth.config.full_host = "http://localhost:3000" unless Rails.env == 'production' 

Rails.application.config.middleware.use OmniAuth::Builder do
  provider :facebook, '*************************', '*************************'
# If you don't need a refresh token -- if you're only using Google for account creation/auth and don't need google services -- set the access_type to 'online'.
  # Also, set the approval prompt to an empty string, since otherwise it will be set to 'force', which makes users manually approve to the Oauth every time they log in.
  # See http://googleappsdeveloper.blogspot.com/2011/10/upcoming-changes-to-oauth-20-endpoint.html
  provider :google_oauth2, '*************************.apps.googleusercontent.com', '*************************', 
    {:scope => 'https://www.googleapis.com/auth/userinfo.email', :access_type => 'online', :approval_prompt=> ''}
  provider :youtube, '*************************.apps.googleusercontent.com', '*************************', 
    {:scope => 'https://www.googleapis.com/auth/userinfo.email', :access_type => 'online', :approval_prompt=> ''}

end
